swagger: '2.0'
info:
  title: Trip Track API
  description: Track your trips with Trip Track API
  version: 1.0.0
host: triptrack-api-dev.herokuapp.com
schemes:
  - http
basePath: /
produces:
  - application/json
paths:
#===============================================================================
# API Definitions
#===============================================================================

#-------------------------------------------------------------------------------
# TRIP
#-------------------------------------------------------------------------------
  /trip:
    post:
      summary: Provide trip information
      description: |
        Allows the client submits a collection of trip details. Each trip detail will consist of
         - the kind of activity (START, UPDATE, STOP)
         - the event date/time as recorded by the client
         - lng/lat position
         - velocity as detected by the client
         - session is a client generated UUID unique to a trip created when a trip starts. It should be renewed each time a new trip is started.
         
        This service requires authentication token.
      parameters:
        - name: trip
          in: body
          required: true
          description: Trip information
          schema:
            $ref: '#/definitions/Trip'
      tags:
        - Trip
      responses:
        200:
          description: The data has been recorded.
        400:
          description: Invalid input.
        401:
          description: Unauthorised. Authorization token is invalid.
        500:
          description: Server error. The client should resend this at a later time.
  /trip/{id}:  
    get:
      summary: Get information about a trip. 
      description: |
        A trip has a start and, may have an end activity. The first item in the collection 
        should always be the START activity, followed by a series of UPDATE activities.
        
        If a trip is ended, the last item in the collection will be an END activity.
        A trip without an END activity is considered to be in-progress.
        
        This service requires authentication token.
      parameters:
        - name: id
          in: path
          required: true
          description: Trip identifier
          type: number
      tags:
        - Trip
      responses:
        200:
          description: A collection of trip details for a given trip
          schema:
            type: array
            items: 
              $ref: '#/definitions/TripDetail'
        401:
          description: Unauthorised. Authorization token is invalid.
        404:
          description: Trip not found.
        default:
          description: Non-successful response
#-------------------------------------------------------------------------------       
  /registration/mobile:
    post:
      summary: Register a customer mobile device
      description: |
        Enable a customer to register and use the mobile app.
        Registration requires a mobile number as identification and a SMS passcode.
        
        Posting to the service without a passcode will cause the SMS to be sent.
        
        {
          "identifier": "0412123456"
        }
        
        Posting to the service with a valid passcode to complete the registration.

        {
          "identifier": "0412123456",
          "passcode": "123456"
        }        

        On successful registration, the service will return an authentication token
        and the customerId.

      parameters:
        - name: registration
          in: body
          required: true
          description: Customer mobile device registration
          schema:
            $ref: '#/definitions/MobileAuthentication'
      tags:
        - Registration
      responses:
        200:
          description: Successfully registered
          schema:
            $ref: '#/definitions/MobileRegistration'
        210:
          description: SMS passcode sent.
        400:
          description: Invalid input.
#-------------------------------------------------------------------------------
# CUSTOMER
#-------------------------------------------------------------------------------           
  /customer/{customerId}/policy:
    get:
      summary: List all policies for a given customer
      description: |
        A customer can have multiple policies. One policy for each insurance.
        
        This service requires authentication token.
      parameters:
        - name: customerId
          in: path
          required: true
          type: string
      tags:
        - Policy
        - Customer
      responses:
        200:
          description: A collection of policies
          schema:
            type: array
            items:
              $ref: '#/definitions/Policy'
        404:
          description: Customer Id not found.
        default:
          description: Non-successful responses
#-------------------------------------------------------------------------------           
  /policy/{policyId}/trips:
    get:
      summary: List all trips for a given policy Id
      description: |
        List all trips (not trip details) for a given policy Id.
        This is the same as listing trips for a given vehicle.
        We cannot determine who (primary or secondary) drives the car.
        
        This service requires authentication token.
      parameters:
        - name: policyId
          in: path
          required: true
          description: Policy required
          type: string
      tags:
        - Policy
        - Trip
      responses:
        200:
          description: A collection of trips
          schema:
            type: array
            items:
              $ref: '#/definitions/TripSummary'
        404:
          description: Policy Id not found.
        default:
          description: Non-successful responses
#-------------------------------------------------------------------------------
# POLICY
#-------------------------------------------------------------------------------       
  /policy/{policyId}/beacon:
    put:
      summary: Register a beacon to a policy
      description: |
        A policy is associated with a beacon. A beacon identifies a vehicle.
        This is an authenticated service.
      parameters:
        - name: policyId
          in: path
          required: true
          description: Policy Id
          type: string
        - name: beacon
          in: body
          required: true
          description: Beacon information
          schema:
            $ref: '#/definitions/Beacon'
      tags:
        - Policy
      responses:
        200:
          description: Successfully registered
        400:
          description: Invalid input.
        404:
          description: Policy id not found.
        409:
          description: This beacon has already been associated to another policy.
    delete:
      summary: De-register a beacon from a policy
      description: |
        A policy is associated with a beacon. A beacon identifies a vehicle.
        This is an authenticated service.
      parameters:
        - name: policyId
          in: path
          required: true
          description: Policy Id
          type: string
      tags:
        - Policy
      responses:
        200:
          description: Successfully de-registered.
        404:
          description: Policy id not found.
#-------------------------------------------------------------------------------
  /policy/{policyId}/{scheduleId}/bill:
    get:
      summary: Bill summary for a policy for a specific schedule period
      description: |
        The billing period is from the start of the schedule to today. If
        a date parameter is specified, it is billed up to that date.
        
        Only includes bill that have been procesed. For example, it will
        not calculate bill in real time as the trip is in progress. Processing
        may be nightly.
        
        This is an authenticated service.
      parameters:
        - name: policyId
          in: path
          required: true
          description: Policy Id
          type: string
        - name: scheduleId
          in: path
          required: true
          description: A schedule defines a specific period for a policy
          type: string
        - name: date
          in: query
          required: false
          description: Bill up to this date. Format is YYYYMMDD. Default is today. 
          type: string
      tags:
        - Policy
        - Billing
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/BillSummary'
        400:
          description: Invalid input.
        404:
          description: Policyid or scheduleId not found.

#===============================================================================
# Models
#===============================================================================
definitions:
#  Status:
#    properties:
#      code:
#        type: string
#      message:
#        type: string
  Trip:
    properties:
      appId:
        type: string
      beacon:
        $ref: '#/definitions/Beacon' 
      details:
        type: array
        items:
          $ref: '#/definitions/TripDetail'
  TripDetail:
    properties:
      session:
        type: string
      activity:
        type: string
      eventdatetime: 
        type: string
      lng:
        type: number
      lat:
        type: number
      velocity:
        type: number
  TripSummary:
    properties:
      tripId:
        type: number
      startdatetime:
        type: string
      startLng:
        type: number
      startLat:
        type: number
      enddatetime:
        type: string
      endLng:
        type: number
      endLat:
        type: number
      duration:
        type: number
      distance:
        type: number
      cost:
        type: number
      savings:
        type: number
  Policy:
    properties:
      policyId:
        type: string
      type:
        type: string
      licence:
        type: string
      make:
        type: string
      model:
        type: string
  BillSummary:
    properties:
      fromDate:
        type: string
      toDate:
        type: string
      amount:
        type: string
      tripDuration:
        type: number
        description: In approximate hours
      dayPassPurchased:
        type: number
  Beacon:
    properties:
      uuid:
        type: string
      major:
        type: string
      minor:
        type: string
  MobileAuthentication:
    properties:
      identifier: 
        type: string
      passcode: 
        type: string
  MobileRegistration:
    properties:
      customerId:
        type: string
        description: The client should store this in the local storage.
      authenticationToken: 
        type: string
        description: |
          The client should store this in the local storage securely.
          The client should provide this in the 'Authorization' header 
          for all authenticated calls.
